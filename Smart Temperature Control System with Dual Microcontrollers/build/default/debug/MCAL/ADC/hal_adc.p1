Version 4.0 HI-TECH Software Intermediate Code
[v F3098 `(v ~T0 @X0 0 tf ]
[v F3099 `(v ~T0 @X0 0 tf ]
[v F3065 `(v ~T0 @X0 0 tf ]
"29 MCAL/ADC/hal_adc.c
[; ;MCAL/ADC/hal_adc.c: 29: Std_ReturnType ADC_Init(const adc_conf_t *_adc){
[c E3025 0 1 .. ]
[n E3025 . INTERRUPT_LOW_PRIORITY INTERRUPT_HIGH_PRIORITY  ]
[c E3044 0 1 2 3 4 5 6 7 .. ]
[n E3044 . ADC_0_TAD ADC_2_TAD ADC_4_TAD ADC_6_TAD ADC_8_TAD ADC_12_TAD ADC_16_TAD ADC_20_TAD  ]
[c E3054 0 1 2 3 4 5 6 .. ]
[n E3054 . ADC_CONVERSION_CLOCK_FOSC_DIV_2 ADC_CONVERSION_CLOCK_FOSC_DIV_8 ADC_CONVERSION_CLOCK_FOSC_DIV_32 ADC_CONVERSION_CLOCK_FOSC_DIV_FRC ADC_CONVERSION_CLOCK_FOSC_DIV_4 ADC_CONVERSION_CLOCK_FOSC_DIV_16 ADC_CONVERSION_CLOCK_FOSC_DIV_64  ]
[c E3029 0 1 2 3 4 5 6 7 8 9 10 11 12 .. ]
[n E3029 . ADC_CHANNEL_AN0 ADC_CHANNEL_AN1 ADC_CHANNEL_AN2 ADC_CHANNEL_AN3 ADC_CHANNEL_AN4 ADC_CHANNEL_AN5 ADC_CHANNEL_AN6 ADC_CHANNEL_AN7 ADC_CHANNEL_AN8 ADC_CHANNEL_AN9 ADC_CHANNEL_AN10 ADC_CHANNEL_AN11 ADC_CHANNEL_AN12  ]
"154 MCAL/ADC/hal_adc.h
[; ;MCAL/ADC/hal_adc.h: 154: typedef struct{
[s S274 `*F3065 1 `E3025 1 `E3044 1 `E3054 1 `E3029 1 :4 `uc 1 :1 `uc 1 :6 `uc 1 ]
[n S274 . ADC_InterruptHandler priority acquisition_time conversion_clock adc_channel voltage_reference result_format ADC_Reserved ]
"4535 C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h
[s S174 :1 `uc 1 :1 `uc 1 ]
[n S174 . . GO_NOT_DONE ]
"4539
[s S175 :1 `uc 1 :1 `uc 1 :4 `uc 1 ]
[n S175 . ADON GO_nDONE CHS ]
"4544
[s S176 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S176 . . GO CHS0 CHS1 CHS2 CHS3 ]
"4552
[s S177 :1 `uc 1 :1 `uc 1 ]
[n S177 . . DONE ]
"4556
[s S178 :1 `uc 1 :1 `uc 1 ]
[n S178 . . NOT_DONE ]
"4560
[s S179 :1 `uc 1 :1 `uc 1 ]
[n S179 . . nDONE ]
"4564
[s S180 :1 `uc 1 :1 `uc 1 ]
[n S180 . . GO_DONE ]
"4568
[s S181 :1 `uc 1 :1 `uc 1 ]
[n S181 . . GODONE ]
"4534
[u S173 `S174 1 `S175 1 `S176 1 `S177 1 `S178 1 `S179 1 `S180 1 `S181 1 ]
[n S173 . . . . . . . . . ]
"4573
[v _ADCON0bits `VS173 ~T0 @X0 0 e@4034 ]
"4379
[s S167 :3 `uc 1 :3 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S167 . ADCS ACQT . ADFM ]
"4385
[s S168 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S168 . ADCS0 ADCS1 ADCS2 ACQT0 ACQT1 ACQT2 ]
"4378
[u S166 `S167 1 `S168 1 ]
[n S166 . . . ]
"4394
[v _ADCON2bits `VS166 ~T0 @X0 0 e@4032 ]
[v F3101 `(v ~T0 @X0 1 tf1`E3029 ]
"15 MCAL/ADC/hal_adc.c
[; ;MCAL/ADC/hal_adc.c: 15: static __attribute__((inline)) void adc_input_channel_port_configure(adc_channel_select_t channel);
[v _adc_input_channel_port_configure `TF3101 ~T0 @X0 0 s ]
"2503 C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h
[s S86 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S86 . TMR1IE TMR2IE CCP1IE SSPIE TXIE RCIE ADIE PSPIE ]
"2513
[s S87 :4 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S87 . . TX1IE RC1IE ]
"2502
[u S85 `S86 1 `S87 1 ]
[n S85 . . . ]
"2519
[v _PIE1bits `VS85 ~T0 @X0 0 e@3997 ]
"2580
[s S89 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S89 . TMR1IF TMR2IF CCP1IF SSPIF TXIF RCIF ADIF PSPIF ]
"2590
[s S90 :4 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S90 . . TX1IF RC1IF ]
"2579
[u S88 `S89 1 `S90 1 ]
[n S88 . . . ]
"2596
[v _PIR1bits `VS88 ~T0 @X0 0 e@3998 ]
"6380
[s S258 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S258 . RBIF INT0IF TMR0IF RBIE INT0IE TMR0IE PEIE_GIEL GIE_GIEH ]
"6390
[s S259 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S259 . . INT0F T0IF . INT0E T0IE PEIE GIE ]
"6400
[s S260 :6 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S260 . . GIEL GIEH ]
"6379
[u S257 `S258 1 `S259 1 `S260 1 ]
[n S257 . . . . ]
"6406
[v _INTCONbits `VS257 ~T0 @X0 0 e@4082 ]
[v F3104 `(v ~T0 @X0 1 tf1`*CS274 ]
"16 MCAL/ADC/hal_adc.c
[; ;MCAL/ADC/hal_adc.c: 16: static __attribute__((inline)) void select_result_format(const adc_conf_t *_adc);
[v _select_result_format `TF3104 ~T0 @X0 0 s ]
[v F3107 `(v ~T0 @X0 1 tf1`*CS274 ]
"17
[; ;MCAL/ADC/hal_adc.c: 17: static __attribute__((inline)) void configure_voltage_reference(const adc_conf_t *_adc);
[v _configure_voltage_reference `TF3107 ~T0 @X0 0 s ]
"4662 C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h
[v _ADRESH `Vuc ~T0 @X0 0 e@4036 ]
"4655
[v _ADRESL `Vuc ~T0 @X0 0 e@4035 ]
"1380
[v _TRISA `Vuc ~T0 @X0 0 e@3986 ]
"2268
[v _TRISE `Vuc ~T0 @X0 0 e@3990 ]
"1602
[v _TRISB `Vuc ~T0 @X0 0 e@3987 ]
"4450
[s S170 :4 `uc 1 :2 `uc 1 ]
[n S170 . PCFG VCFG ]
"4454
[s S171 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S171 . PCFG0 PCFG1 PCFG2 PCFG3 VCFG0 VCFG1 ]
"4462
[s S172 :3 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S172 . . CHSN3 VCFG01 VCFG11 ]
"4449
[u S169 `S170 1 `S171 1 `S172 1 ]
[n S169 . . . . ]
"4469
[v _ADCON1bits `VS169 ~T0 @X0 0 e@4033 ]
[v F3154 `(v ~T0 @X0 0 tf ]
"54 C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h
[; <" PORTA equ 0F80h ;# ">
"191
[; <" PORTB equ 0F81h ;# ">
"362
[; <" PORTC equ 0F82h ;# ">
"537
[; <" PORTD equ 0F83h ;# ">
"679
[; <" PORTE equ 0F84h ;# ">
"882
[; <" LATA equ 0F89h ;# ">
"994
[; <" LATB equ 0F8Ah ;# ">
"1106
[; <" LATC equ 0F8Bh ;# ">
"1218
[; <" LATD equ 0F8Ch ;# ">
"1330
[; <" LATE equ 0F8Dh ;# ">
"1382
[; <" TRISA equ 0F92h ;# ">
"1387
[; <" DDRA equ 0F92h ;# ">
"1604
[; <" TRISB equ 0F93h ;# ">
"1609
[; <" DDRB equ 0F93h ;# ">
"1826
[; <" TRISC equ 0F94h ;# ">
"1831
[; <" DDRC equ 0F94h ;# ">
"2048
[; <" TRISD equ 0F95h ;# ">
"2053
[; <" DDRD equ 0F95h ;# ">
"2270
[; <" TRISE equ 0F96h ;# ">
"2275
[; <" DDRE equ 0F96h ;# ">
"2434
[; <" OSCTUNE equ 0F9Bh ;# ">
"2499
[; <" PIE1 equ 0F9Dh ;# ">
"2576
[; <" PIR1 equ 0F9Eh ;# ">
"2653
[; <" IPR1 equ 0F9Fh ;# ">
"2730
[; <" PIE2 equ 0FA0h ;# ">
"2796
[; <" PIR2 equ 0FA1h ;# ">
"2862
[; <" IPR2 equ 0FA2h ;# ">
"2928
[; <" EECON1 equ 0FA6h ;# ">
"2994
[; <" EECON2 equ 0FA7h ;# ">
"3001
[; <" EEDATA equ 0FA8h ;# ">
"3008
[; <" EEADR equ 0FA9h ;# ">
"3015
[; <" EEADRH equ 0FAAh ;# ">
"3022
[; <" RCSTA equ 0FABh ;# ">
"3027
[; <" RCSTA1 equ 0FABh ;# ">
"3232
[; <" TXSTA equ 0FACh ;# ">
"3237
[; <" TXSTA1 equ 0FACh ;# ">
"3488
[; <" TXREG equ 0FADh ;# ">
"3493
[; <" TXREG1 equ 0FADh ;# ">
"3500
[; <" RCREG equ 0FAEh ;# ">
"3505
[; <" RCREG1 equ 0FAEh ;# ">
"3512
[; <" SPBRG equ 0FAFh ;# ">
"3517
[; <" SPBRG1 equ 0FAFh ;# ">
"3524
[; <" SPBRGH equ 0FB0h ;# ">
"3531
[; <" T3CON equ 0FB1h ;# ">
"3643
[; <" TMR3 equ 0FB2h ;# ">
"3650
[; <" TMR3L equ 0FB2h ;# ">
"3657
[; <" TMR3H equ 0FB3h ;# ">
"3664
[; <" CMCON equ 0FB4h ;# ">
"3754
[; <" CVRCON equ 0FB5h ;# ">
"3833
[; <" ECCP1AS equ 0FB6h ;# ">
"3915
[; <" PWM1CON equ 0FB7h ;# ">
"3985
[; <" BAUDCON equ 0FB8h ;# ">
"3990
[; <" BAUDCTL equ 0FB8h ;# ">
"4157
[; <" CCP2CON equ 0FBAh ;# ">
"4236
[; <" CCPR2 equ 0FBBh ;# ">
"4243
[; <" CCPR2L equ 0FBBh ;# ">
"4250
[; <" CCPR2H equ 0FBCh ;# ">
"4257
[; <" CCP1CON equ 0FBDh ;# ">
"4354
[; <" CCPR1 equ 0FBEh ;# ">
"4361
[; <" CCPR1L equ 0FBEh ;# ">
"4368
[; <" CCPR1H equ 0FBFh ;# ">
"4375
[; <" ADCON2 equ 0FC0h ;# ">
"4446
[; <" ADCON1 equ 0FC1h ;# ">
"4531
[; <" ADCON0 equ 0FC2h ;# ">
"4650
[; <" ADRES equ 0FC3h ;# ">
"4657
[; <" ADRESL equ 0FC3h ;# ">
"4664
[; <" ADRESH equ 0FC4h ;# ">
"4671
[; <" SSPCON2 equ 0FC5h ;# ">
"4733
[; <" SSPCON1 equ 0FC6h ;# ">
"4803
[; <" SSPSTAT equ 0FC7h ;# ">
"5024
[; <" SSPADD equ 0FC8h ;# ">
"5031
[; <" SSPBUF equ 0FC9h ;# ">
"5038
[; <" T2CON equ 0FCAh ;# ">
"5109
[; <" PR2 equ 0FCBh ;# ">
"5114
[; <" MEMCON equ 0FCBh ;# ">
"5219
[; <" TMR2 equ 0FCCh ;# ">
"5226
[; <" T1CON equ 0FCDh ;# ">
"5329
[; <" TMR1 equ 0FCEh ;# ">
"5336
[; <" TMR1L equ 0FCEh ;# ">
"5343
[; <" TMR1H equ 0FCFh ;# ">
"5350
[; <" RCON equ 0FD0h ;# ">
"5483
[; <" WDTCON equ 0FD1h ;# ">
"5511
[; <" HLVDCON equ 0FD2h ;# ">
"5516
[; <" LVDCON equ 0FD2h ;# ">
"5781
[; <" OSCCON equ 0FD3h ;# ">
"5858
[; <" T0CON equ 0FD5h ;# ">
"5935
[; <" TMR0 equ 0FD6h ;# ">
"5942
[; <" TMR0L equ 0FD6h ;# ">
"5949
[; <" TMR0H equ 0FD7h ;# ">
"5956
[; <" STATUS equ 0FD8h ;# ">
"6027
[; <" FSR2 equ 0FD9h ;# ">
"6034
[; <" FSR2L equ 0FD9h ;# ">
"6041
[; <" FSR2H equ 0FDAh ;# ">
"6048
[; <" PLUSW2 equ 0FDBh ;# ">
"6055
[; <" PREINC2 equ 0FDCh ;# ">
"6062
[; <" POSTDEC2 equ 0FDDh ;# ">
"6069
[; <" POSTINC2 equ 0FDEh ;# ">
"6076
[; <" INDF2 equ 0FDFh ;# ">
"6083
[; <" BSR equ 0FE0h ;# ">
"6090
[; <" FSR1 equ 0FE1h ;# ">
"6097
[; <" FSR1L equ 0FE1h ;# ">
"6104
[; <" FSR1H equ 0FE2h ;# ">
"6111
[; <" PLUSW1 equ 0FE3h ;# ">
"6118
[; <" PREINC1 equ 0FE4h ;# ">
"6125
[; <" POSTDEC1 equ 0FE5h ;# ">
"6132
[; <" POSTINC1 equ 0FE6h ;# ">
"6139
[; <" INDF1 equ 0FE7h ;# ">
"6146
[; <" WREG equ 0FE8h ;# ">
"6158
[; <" FSR0 equ 0FE9h ;# ">
"6165
[; <" FSR0L equ 0FE9h ;# ">
"6172
[; <" FSR0H equ 0FEAh ;# ">
"6179
[; <" PLUSW0 equ 0FEBh ;# ">
"6186
[; <" PREINC0 equ 0FECh ;# ">
"6193
[; <" POSTDEC0 equ 0FEDh ;# ">
"6200
[; <" POSTINC0 equ 0FEEh ;# ">
"6207
[; <" INDF0 equ 0FEFh ;# ">
"6214
[; <" INTCON3 equ 0FF0h ;# ">
"6306
[; <" INTCON2 equ 0FF1h ;# ">
"6376
[; <" INTCON equ 0FF2h ;# ">
"6493
[; <" PROD equ 0FF3h ;# ">
"6500
[; <" PRODL equ 0FF3h ;# ">
"6507
[; <" PRODH equ 0FF4h ;# ">
"6514
[; <" TABLAT equ 0FF5h ;# ">
"6523
[; <" TBLPTR equ 0FF6h ;# ">
"6530
[; <" TBLPTRL equ 0FF6h ;# ">
"6537
[; <" TBLPTRH equ 0FF7h ;# ">
"6544
[; <" TBLPTRU equ 0FF8h ;# ">
"6553
[; <" PCLAT equ 0FF9h ;# ">
"6560
[; <" PC equ 0FF9h ;# ">
"6567
[; <" PCL equ 0FF9h ;# ">
"6574
[; <" PCLATH equ 0FFAh ;# ">
"6581
[; <" PCLATU equ 0FFBh ;# ">
"6588
[; <" STKPTR equ 0FFCh ;# ">
"6694
[; <" TOS equ 0FFDh ;# ">
"6701
[; <" TOSL equ 0FFDh ;# ">
"6708
[; <" TOSH equ 0FFEh ;# ">
"6715
[; <" TOSU equ 0FFFh ;# ">
"11 MCAL/ADC/hal_adc.c
[; ;MCAL/ADC/hal_adc.c: 11: static void (*ADC_InterruptHandler)(void) = ((void*)0);
[v _ADC_InterruptHandler `*F3098 ~T0 @X0 1 s ]
[i _ADC_InterruptHandler
-> -> -> 0 `i `*v `*F3099
]
"29
[; ;MCAL/ADC/hal_adc.c: 29: Std_ReturnType ADC_Init(const adc_conf_t *_adc){
[v _ADC_Init `(uc ~T0 @X0 1 ef1`*CS274 ]
{
[e :U _ADC_Init ]
[v __adc `*CS274 ~T0 @X0 1 r1 ]
[f ]
"30
[; ;MCAL/ADC/hal_adc.c: 30:     Std_ReturnType ret = (Std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"31
[; ;MCAL/ADC/hal_adc.c: 31:     if(((void*)0) == _adc){
[e $ ! == -> -> -> 0 `i `*v `*CS274 __adc 276  ]
{
"32
[; ;MCAL/ADC/hal_adc.c: 32:         ret = (Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"33
[; ;MCAL/ADC/hal_adc.c: 33:     }
}
[e $U 277  ]
"34
[; ;MCAL/ADC/hal_adc.c: 34:     else{
[e :U 276 ]
{
"36
[; ;MCAL/ADC/hal_adc.c: 36:         (ADCON0bits.ADON = 0);
[e = . . _ADCON0bits 1 0 -> -> 0 `i `uc ]
"38
[; ;MCAL/ADC/hal_adc.c: 38:         ADCON2bits.ACQT = _adc->acquisition_time;
[e = . . _ADCON2bits 0 1 -> . *U __adc 2 `uc ]
"40
[; ;MCAL/ADC/hal_adc.c: 40:         ADCON2bits.ADCS = _adc->conversion_clock;
[e = . . _ADCON2bits 0 0 -> . *U __adc 3 `uc ]
"42
[; ;MCAL/ADC/hal_adc.c: 42:         ADCON0bits.CHS = _adc->adc_channel;
[e = . . _ADCON0bits 1 2 -> . *U __adc 4 `uc ]
"43
[; ;MCAL/ADC/hal_adc.c: 43:         adc_input_channel_port_configure(_adc->adc_channel);
[e ( _adc_input_channel_port_configure (1 . *U __adc 4 ]
"47
[; ;MCAL/ADC/hal_adc.c: 47:         (PIE1bits.ADIE = 1);
[e = . . _PIE1bits 0 6 -> -> 1 `i `uc ]
"48
[; ;MCAL/ADC/hal_adc.c: 48:         (PIR1bits.ADIF = 0);
[e = . . _PIR1bits 0 6 -> -> 0 `i `uc ]
"60
[; ;MCAL/ADC/hal_adc.c: 60:         (INTCONbits.GIE = 1);
[e = . . _INTCONbits 1 7 -> -> 1 `i `uc ]
"61
[; ;MCAL/ADC/hal_adc.c: 61:         (INTCONbits.PEIE = 1);
[e = . . _INTCONbits 1 6 -> -> 1 `i `uc ]
"63
[; ;MCAL/ADC/hal_adc.c: 63:         ADC_InterruptHandler = _adc->ADC_InterruptHandler;
[e = _ADC_InterruptHandler . *U __adc 0 ]
"67
[; ;MCAL/ADC/hal_adc.c: 67:         select_result_format(_adc);
[e ( _select_result_format (1 __adc ]
"69
[; ;MCAL/ADC/hal_adc.c: 69:         configure_voltage_reference(_adc);
[e ( _configure_voltage_reference (1 __adc ]
"71
[; ;MCAL/ADC/hal_adc.c: 71:         (ADCON0bits.ADON = 1);
[e = . . _ADCON0bits 1 0 -> -> 1 `i `uc ]
"72
[; ;MCAL/ADC/hal_adc.c: 72:         ret = (Std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"73
[; ;MCAL/ADC/hal_adc.c: 73:     }
}
[e :U 277 ]
"74
[; ;MCAL/ADC/hal_adc.c: 74:     return ret;
[e ) _ret ]
[e $UE 275  ]
"75
[; ;MCAL/ADC/hal_adc.c: 75: }
[e :UE 275 ]
}
"84
[; ;MCAL/ADC/hal_adc.c: 84: Std_ReturnType ADC_DeInit(const adc_conf_t *_adc){
[v _ADC_DeInit `(uc ~T0 @X0 1 ef1`*CS274 ]
{
[e :U _ADC_DeInit ]
[v __adc `*CS274 ~T0 @X0 1 r1 ]
[f ]
"85
[; ;MCAL/ADC/hal_adc.c: 85:     Std_ReturnType ret = (Std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"86
[; ;MCAL/ADC/hal_adc.c: 86:     if(((void*)0) == _adc){
[e $ ! == -> -> -> 0 `i `*v `*CS274 __adc 279  ]
{
"87
[; ;MCAL/ADC/hal_adc.c: 87:         ret = (Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"88
[; ;MCAL/ADC/hal_adc.c: 88:     }
}
[e $U 280  ]
"89
[; ;MCAL/ADC/hal_adc.c: 89:     else{
[e :U 279 ]
{
"91
[; ;MCAL/ADC/hal_adc.c: 91:         (ADCON0bits.ADON = 0);
[e = . . _ADCON0bits 1 0 -> -> 0 `i `uc ]
"94
[; ;MCAL/ADC/hal_adc.c: 94:         (PIE1bits.ADIE = 0);
[e = . . _PIE1bits 0 6 -> -> 0 `i `uc ]
"96
[; ;MCAL/ADC/hal_adc.c: 96:         ret = (Std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"97
[; ;MCAL/ADC/hal_adc.c: 97:     }
}
[e :U 280 ]
"98
[; ;MCAL/ADC/hal_adc.c: 98:     return ret;
[e ) _ret ]
[e $UE 278  ]
"99
[; ;MCAL/ADC/hal_adc.c: 99: }
[e :UE 278 ]
}
"110
[; ;MCAL/ADC/hal_adc.c: 110: Std_ReturnType ADC_SelectChannel(const adc_conf_t *_adc, adc_channel_select_t channel){
[v _ADC_SelectChannel `(uc ~T0 @X0 1 ef2`*CS274`E3029 ]
{
[e :U _ADC_SelectChannel ]
[v __adc `*CS274 ~T0 @X0 1 r1 ]
[v _channel `E3029 ~T0 @X0 1 r2 ]
[f ]
"111
[; ;MCAL/ADC/hal_adc.c: 111:     Std_ReturnType ret = (Std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"112
[; ;MCAL/ADC/hal_adc.c: 112:     if(((void*)0) == _adc){
[e $ ! == -> -> -> 0 `i `*v `*CS274 __adc 282  ]
{
"113
[; ;MCAL/ADC/hal_adc.c: 113:         ret = (Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"114
[; ;MCAL/ADC/hal_adc.c: 114:     }
}
[e $U 283  ]
"115
[; ;MCAL/ADC/hal_adc.c: 115:     else{
[e :U 282 ]
{
"117
[; ;MCAL/ADC/hal_adc.c: 117:         ADCON0bits.CHS = channel;
[e = . . _ADCON0bits 1 2 -> _channel `uc ]
"118
[; ;MCAL/ADC/hal_adc.c: 118:         adc_input_channel_port_configure(channel);
[e ( _adc_input_channel_port_configure (1 _channel ]
"119
[; ;MCAL/ADC/hal_adc.c: 119:         ret = (Std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"120
[; ;MCAL/ADC/hal_adc.c: 120:     }
}
[e :U 283 ]
"121
[; ;MCAL/ADC/hal_adc.c: 121:     return ret;
[e ) _ret ]
[e $UE 281  ]
"122
[; ;MCAL/ADC/hal_adc.c: 122: }
[e :UE 281 ]
}
"132
[; ;MCAL/ADC/hal_adc.c: 132: Std_ReturnType ADC_StartConversion(const adc_conf_t *_adc){
[v _ADC_StartConversion `(uc ~T0 @X0 1 ef1`*CS274 ]
{
[e :U _ADC_StartConversion ]
[v __adc `*CS274 ~T0 @X0 1 r1 ]
[f ]
"133
[; ;MCAL/ADC/hal_adc.c: 133:     Std_ReturnType ret = (Std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"134
[; ;MCAL/ADC/hal_adc.c: 134:     if(((void*)0) == _adc){
[e $ ! == -> -> -> 0 `i `*v `*CS274 __adc 285  ]
{
"135
[; ;MCAL/ADC/hal_adc.c: 135:         ret = (Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"136
[; ;MCAL/ADC/hal_adc.c: 136:     }
}
[e $U 286  ]
"137
[; ;MCAL/ADC/hal_adc.c: 137:     else{
[e :U 285 ]
{
"138
[; ;MCAL/ADC/hal_adc.c: 138:         (ADCON0bits.GODONE = 1);
[e = . . _ADCON0bits 7 1 -> -> 1 `i `uc ]
"139
[; ;MCAL/ADC/hal_adc.c: 139:         ret = (Std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"140
[; ;MCAL/ADC/hal_adc.c: 140:     }
}
[e :U 286 ]
"141
[; ;MCAL/ADC/hal_adc.c: 141:     return ret;
[e ) _ret ]
[e $UE 284  ]
"142
[; ;MCAL/ADC/hal_adc.c: 142: }
[e :UE 284 ]
}
"156
[; ;MCAL/ADC/hal_adc.c: 156: Std_ReturnType ADC_IsConversionDone(const adc_conf_t *_adc, uint8 *conversion_status){
[v _ADC_IsConversionDone `(uc ~T0 @X0 1 ef2`*CS274`*uc ]
{
[e :U _ADC_IsConversionDone ]
[v __adc `*CS274 ~T0 @X0 1 r1 ]
[v _conversion_status `*uc ~T0 @X0 1 r2 ]
[f ]
"157
[; ;MCAL/ADC/hal_adc.c: 157:     Std_ReturnType ret = (Std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"158
[; ;MCAL/ADC/hal_adc.c: 158:     if(((void*)0) == _adc || ((void*)0) == conversion_status){
[e $ ! || == -> -> -> 0 `i `*v `*CS274 __adc == -> -> -> 0 `i `*v `*uc _conversion_status 288  ]
{
"159
[; ;MCAL/ADC/hal_adc.c: 159:         ret = (Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"160
[; ;MCAL/ADC/hal_adc.c: 160:     }
}
[e $U 289  ]
"161
[; ;MCAL/ADC/hal_adc.c: 161:     else{
[e :U 288 ]
{
"162
[; ;MCAL/ADC/hal_adc.c: 162:         *conversion_status = (uint8)(!(ADCON0bits.GO_nDONE));
[e = *U _conversion_status -> -> ! != -> . . _ADCON0bits 1 1 `i -> 0 `i `i `uc ]
"163
[; ;MCAL/ADC/hal_adc.c: 163:         ret = (Std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"164
[; ;MCAL/ADC/hal_adc.c: 164:     }
}
[e :U 289 ]
"165
[; ;MCAL/ADC/hal_adc.c: 165:     return ret;
[e ) _ret ]
[e $UE 287  ]
"166
[; ;MCAL/ADC/hal_adc.c: 166: }
[e :UE 287 ]
}
"176
[; ;MCAL/ADC/hal_adc.c: 176: Std_ReturnType ADC_GetConversionResult(const adc_conf_t *_adc, adc_result_t *conversion_result){
[v _ADC_GetConversionResult `(uc ~T0 @X0 1 ef2`*CS274`*us ]
{
[e :U _ADC_GetConversionResult ]
[v __adc `*CS274 ~T0 @X0 1 r1 ]
[v _conversion_result `*us ~T0 @X0 1 r2 ]
[f ]
"177
[; ;MCAL/ADC/hal_adc.c: 177:     Std_ReturnType ret = (Std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"178
[; ;MCAL/ADC/hal_adc.c: 178:     if(((void*)0) == _adc || ((void*)0) == conversion_result){
[e $ ! || == -> -> -> 0 `i `*v `*CS274 __adc == -> -> -> 0 `i `*v `*us _conversion_result 291  ]
{
"179
[; ;MCAL/ADC/hal_adc.c: 179:         ret = (Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"180
[; ;MCAL/ADC/hal_adc.c: 180:     }
}
[e $U 292  ]
"181
[; ;MCAL/ADC/hal_adc.c: 181:     else{
[e :U 291 ]
{
"182
[; ;MCAL/ADC/hal_adc.c: 182:         if(0X01U == _adc->result_format){
[e $ ! == -> 1 `ui -> . *U __adc 6 `ui 293  ]
{
"183
[; ;MCAL/ADC/hal_adc.c: 183:             *conversion_result = (adc_result_t)((ADRESH << 8 ) + ADRESL);
[e = *U _conversion_result -> + << -> _ADRESH `i -> 8 `i -> _ADRESL `i `us ]
"184
[; ;MCAL/ADC/hal_adc.c: 184:         }
}
[e $U 294  ]
"185
[; ;MCAL/ADC/hal_adc.c: 185:         else if(0X00U == _adc->result_format){
[e :U 293 ]
[e $ ! == -> 0 `ui -> . *U __adc 6 `ui 295  ]
{
"186
[; ;MCAL/ADC/hal_adc.c: 186:             *conversion_result = (adc_result_t)(((ADRESH << 8 ) + ADRESL) >> 6);
[e = *U _conversion_result -> >> + << -> _ADRESH `i -> 8 `i -> _ADRESL `i -> 6 `i `us ]
"187
[; ;MCAL/ADC/hal_adc.c: 187:         }
}
[e $U 296  ]
"188
[; ;MCAL/ADC/hal_adc.c: 188:         else{
[e :U 295 ]
{
"189
[; ;MCAL/ADC/hal_adc.c: 189:             *conversion_result = (adc_result_t)((ADRESH << 8 ) + ADRESL);
[e = *U _conversion_result -> + << -> _ADRESH `i -> 8 `i -> _ADRESL `i `us ]
"190
[; ;MCAL/ADC/hal_adc.c: 190:         }
}
[e :U 296 ]
[e :U 294 ]
"191
[; ;MCAL/ADC/hal_adc.c: 191:             ret = (Std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"192
[; ;MCAL/ADC/hal_adc.c: 192:         }
}
[e :U 292 ]
"193
[; ;MCAL/ADC/hal_adc.c: 193:     return ret;
[e ) _ret ]
[e $UE 290  ]
"194
[; ;MCAL/ADC/hal_adc.c: 194: }
[e :UE 290 ]
}
"206
[; ;MCAL/ADC/hal_adc.c: 206: Std_ReturnType ADC_GetConversion_Blocking(const adc_conf_t *_adc, adc_channel_select_t channel
[v _ADC_GetConversion_Blocking `(uc ~T0 @X0 1 ef3`*CS274`E3029`*us ]
"207
[; ;MCAL/ADC/hal_adc.c: 207:                                   ,adc_result_t *conversion_result){
{
[e :U _ADC_GetConversion_Blocking ]
"206
[; ;MCAL/ADC/hal_adc.c: 206: Std_ReturnType ADC_GetConversion_Blocking(const adc_conf_t *_adc, adc_channel_select_t channel
[v __adc `*CS274 ~T0 @X0 1 r1 ]
[v _channel `E3029 ~T0 @X0 1 r2 ]
"207
[; ;MCAL/ADC/hal_adc.c: 207:                                   ,adc_result_t *conversion_result){
[v _conversion_result `*us ~T0 @X0 1 r3 ]
[f ]
"208
[; ;MCAL/ADC/hal_adc.c: 208:     Std_ReturnType ret = (Std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"209
[; ;MCAL/ADC/hal_adc.c: 209:     uint8 l_conversion_status = 0;
[v _l_conversion_status `uc ~T0 @X0 1 a ]
[e = _l_conversion_status -> -> 0 `i `uc ]
"210
[; ;MCAL/ADC/hal_adc.c: 210:     if((((void*)0) == _adc) || (((void*)0) == conversion_result)){
[e $ ! || == -> -> -> 0 `i `*v `*CS274 __adc == -> -> -> 0 `i `*v `*us _conversion_result 298  ]
{
"211
[; ;MCAL/ADC/hal_adc.c: 211:         ret = (Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"212
[; ;MCAL/ADC/hal_adc.c: 212:     }
}
[e $U 299  ]
"213
[; ;MCAL/ADC/hal_adc.c: 213:     else{
[e :U 298 ]
{
"215
[; ;MCAL/ADC/hal_adc.c: 215:         ret = ADC_SelectChannel(_adc, channel);
[e = _ret ( _ADC_SelectChannel (2 , __adc _channel ]
"217
[; ;MCAL/ADC/hal_adc.c: 217:         ret = ADC_StartConversion(_adc);
[e = _ret ( _ADC_StartConversion (1 __adc ]
"219
[; ;MCAL/ADC/hal_adc.c: 219:         while(ADCON0bits.GO_nDONE);
[e $U 300  ]
[e :U 301 ]
[e :U 300 ]
[e $ != -> . . _ADCON0bits 1 1 `i -> 0 `i 301  ]
[e :U 302 ]
"220
[; ;MCAL/ADC/hal_adc.c: 220:         ret = ADC_GetConversionResult(_adc, conversion_result);
[e = _ret ( _ADC_GetConversionResult (2 , __adc _conversion_result ]
"222
[; ;MCAL/ADC/hal_adc.c: 222:     }
}
[e :U 299 ]
"223
[; ;MCAL/ADC/hal_adc.c: 223:     return ret;
[e ) _ret ]
[e $UE 297  ]
"224
[; ;MCAL/ADC/hal_adc.c: 224: }
[e :UE 297 ]
}
"235
[; ;MCAL/ADC/hal_adc.c: 235: Std_ReturnType ADC_StartConversion_Interrupt(const adc_conf_t *_adc, adc_channel_select_t channel){
[v _ADC_StartConversion_Interrupt `(uc ~T0 @X0 1 ef2`*CS274`E3029 ]
{
[e :U _ADC_StartConversion_Interrupt ]
[v __adc `*CS274 ~T0 @X0 1 r1 ]
[v _channel `E3029 ~T0 @X0 1 r2 ]
[f ]
"236
[; ;MCAL/ADC/hal_adc.c: 236:     Std_ReturnType ret = (Std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"237
[; ;MCAL/ADC/hal_adc.c: 237:     uint8 l_conversion_status = 0;
[v _l_conversion_status `uc ~T0 @X0 1 a ]
[e = _l_conversion_status -> -> 0 `i `uc ]
"238
[; ;MCAL/ADC/hal_adc.c: 238:     if(((void*)0) == _adc){
[e $ ! == -> -> -> 0 `i `*v `*CS274 __adc 304  ]
{
"239
[; ;MCAL/ADC/hal_adc.c: 239:         ret = (Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"240
[; ;MCAL/ADC/hal_adc.c: 240:     }
}
[e $U 305  ]
"241
[; ;MCAL/ADC/hal_adc.c: 241:     else{
[e :U 304 ]
{
"243
[; ;MCAL/ADC/hal_adc.c: 243:         ret = ADC_SelectChannel(_adc, channel);
[e = _ret ( _ADC_SelectChannel (2 , __adc _channel ]
"245
[; ;MCAL/ADC/hal_adc.c: 245:         ret = ADC_StartConversion(_adc);
[e = _ret ( _ADC_StartConversion (1 __adc ]
"247
[; ;MCAL/ADC/hal_adc.c: 247:     }
}
[e :U 305 ]
"248
[; ;MCAL/ADC/hal_adc.c: 248:     return ret;
[e ) _ret ]
[e $UE 303  ]
"249
[; ;MCAL/ADC/hal_adc.c: 249: }
[e :UE 303 ]
}
[v F3145 `(v ~T0 @X0 1 tf1`E3029 ]
"252
[; ;MCAL/ADC/hal_adc.c: 252: static __attribute__((inline)) void adc_input_channel_port_configure(adc_channel_select_t channel){
[v _adc_input_channel_port_configure `TF3145 ~T0 @X0 1 s ]
{
[e :U _adc_input_channel_port_configure ]
[v _channel `E3029 ~T0 @X0 1 r1 ]
[f ]
"253
[; ;MCAL/ADC/hal_adc.c: 253:     switch(channel){
[e $U 308  ]
{
"254
[; ;MCAL/ADC/hal_adc.c: 254:         case ADC_CHANNEL_AN0 : (TRISA |= ((uint8)1 << 0x0)); break;
[e :U 309 ]
[e =| _TRISA -> << -> -> -> 1 `i `uc `i -> 0 `i `Vuc ]
[e $U 307  ]
"255
[; ;MCAL/ADC/hal_adc.c: 255:         case ADC_CHANNEL_AN1 : (TRISA |= ((uint8)1 << 0x1)); break;
[e :U 310 ]
[e =| _TRISA -> << -> -> -> 1 `i `uc `i -> 1 `i `Vuc ]
[e $U 307  ]
"256
[; ;MCAL/ADC/hal_adc.c: 256:         case ADC_CHANNEL_AN2 : (TRISA |= ((uint8)1 << 0x2)); break;
[e :U 311 ]
[e =| _TRISA -> << -> -> -> 1 `i `uc `i -> 2 `i `Vuc ]
[e $U 307  ]
"257
[; ;MCAL/ADC/hal_adc.c: 257:         case ADC_CHANNEL_AN3 : (TRISA |= ((uint8)1 << 0x3)); break;
[e :U 312 ]
[e =| _TRISA -> << -> -> -> 1 `i `uc `i -> 3 `i `Vuc ]
[e $U 307  ]
"258
[; ;MCAL/ADC/hal_adc.c: 258:         case ADC_CHANNEL_AN4 : (TRISA |= ((uint8)1 << 0x4)); break;
[e :U 313 ]
[e =| _TRISA -> << -> -> -> 1 `i `uc `i -> 4 `i `Vuc ]
[e $U 307  ]
"259
[; ;MCAL/ADC/hal_adc.c: 259:         case ADC_CHANNEL_AN5 : (TRISE |= ((uint8)1 << 0x0)); break;
[e :U 314 ]
[e =| _TRISE -> << -> -> -> 1 `i `uc `i -> 0 `i `Vuc ]
[e $U 307  ]
"260
[; ;MCAL/ADC/hal_adc.c: 260:         case ADC_CHANNEL_AN6 : (TRISE |= ((uint8)1 << 0x1)); break;
[e :U 315 ]
[e =| _TRISE -> << -> -> -> 1 `i `uc `i -> 1 `i `Vuc ]
[e $U 307  ]
"261
[; ;MCAL/ADC/hal_adc.c: 261:         case ADC_CHANNEL_AN7 : (TRISE |= ((uint8)1 << 0x2)); break;
[e :U 316 ]
[e =| _TRISE -> << -> -> -> 1 `i `uc `i -> 2 `i `Vuc ]
[e $U 307  ]
"262
[; ;MCAL/ADC/hal_adc.c: 262:         case ADC_CHANNEL_AN8 : (TRISB |= ((uint8)1 << 0x2)); break;
[e :U 317 ]
[e =| _TRISB -> << -> -> -> 1 `i `uc `i -> 2 `i `Vuc ]
[e $U 307  ]
"263
[; ;MCAL/ADC/hal_adc.c: 263:         case ADC_CHANNEL_AN9 : (TRISB |= ((uint8)1 << 0x3)); break;
[e :U 318 ]
[e =| _TRISB -> << -> -> -> 1 `i `uc `i -> 3 `i `Vuc ]
[e $U 307  ]
"264
[; ;MCAL/ADC/hal_adc.c: 264:         case ADC_CHANNEL_AN10 : (TRISB |= ((uint8)1 << 0x1)); break;
[e :U 319 ]
[e =| _TRISB -> << -> -> -> 1 `i `uc `i -> 1 `i `Vuc ]
[e $U 307  ]
"265
[; ;MCAL/ADC/hal_adc.c: 265:         case ADC_CHANNEL_AN11 : (TRISB |= ((uint8)1 << 0x4)); break;
[e :U 320 ]
[e =| _TRISB -> << -> -> -> 1 `i `uc `i -> 4 `i `Vuc ]
[e $U 307  ]
"266
[; ;MCAL/ADC/hal_adc.c: 266:         case ADC_CHANNEL_AN12 : (TRISB |= ((uint8)1 << 0x0)); break;
[e :U 321 ]
[e =| _TRISB -> << -> -> -> 1 `i `uc `i -> 0 `i `Vuc ]
[e $U 307  ]
"268
[; ;MCAL/ADC/hal_adc.c: 268:     }
}
[e $U 307  ]
[e :U 308 ]
[e [\ -> _channel `ui , $ -> . `E3029 0 `ui 309
 , $ -> . `E3029 1 `ui 310
 , $ -> . `E3029 2 `ui 311
 , $ -> . `E3029 3 `ui 312
 , $ -> . `E3029 4 `ui 313
 , $ -> . `E3029 5 `ui 314
 , $ -> . `E3029 6 `ui 315
 , $ -> . `E3029 7 `ui 316
 , $ -> . `E3029 8 `ui 317
 , $ -> . `E3029 9 `ui 318
 , $ -> . `E3029 10 `ui 319
 , $ -> . `E3029 11 `ui 320
 , $ -> . `E3029 12 `ui 321
 307 ]
[e :U 307 ]
"269
[; ;MCAL/ADC/hal_adc.c: 269: }
[e :UE 306 ]
}
[v F3148 `(v ~T0 @X0 1 tf1`*CS274 ]
"271
[; ;MCAL/ADC/hal_adc.c: 271: static __attribute__((inline)) void select_result_format(const adc_conf_t *_adc){
[v _select_result_format `TF3148 ~T0 @X0 1 s ]
{
[e :U _select_result_format ]
[v __adc `*CS274 ~T0 @X0 1 r1 ]
[f ]
"272
[; ;MCAL/ADC/hal_adc.c: 272:     if(0X01U == _adc->result_format){
[e $ ! == -> 1 `ui -> . *U __adc 6 `ui 323  ]
{
"273
[; ;MCAL/ADC/hal_adc.c: 273:         (ADCON2bits.ADFM = 1);
[e = . . _ADCON2bits 0 3 -> -> 1 `i `uc ]
"274
[; ;MCAL/ADC/hal_adc.c: 274:     }
}
[e $U 324  ]
"275
[; ;MCAL/ADC/hal_adc.c: 275:     else if(0X00U == _adc->result_format){
[e :U 323 ]
[e $ ! == -> 0 `ui -> . *U __adc 6 `ui 325  ]
{
"276
[; ;MCAL/ADC/hal_adc.c: 276:         (ADCON2bits.ADFM = 0);
[e = . . _ADCON2bits 0 3 -> -> 0 `i `uc ]
"277
[; ;MCAL/ADC/hal_adc.c: 277:     }
}
[e $U 326  ]
"278
[; ;MCAL/ADC/hal_adc.c: 278:     else{
[e :U 325 ]
{
"279
[; ;MCAL/ADC/hal_adc.c: 279:         (ADCON2bits.ADFM = 1);
[e = . . _ADCON2bits 0 3 -> -> 1 `i `uc ]
"280
[; ;MCAL/ADC/hal_adc.c: 280:     }
}
[e :U 326 ]
[e :U 324 ]
"281
[; ;MCAL/ADC/hal_adc.c: 281: }
[e :UE 322 ]
}
[v F3151 `(v ~T0 @X0 1 tf1`*CS274 ]
"283
[; ;MCAL/ADC/hal_adc.c: 283: static __attribute__((inline)) void configure_voltage_reference(const adc_conf_t *_adc){
[v _configure_voltage_reference `TF3151 ~T0 @X0 1 s ]
{
[e :U _configure_voltage_reference ]
[v __adc `*CS274 ~T0 @X0 1 r1 ]
[f ]
"284
[; ;MCAL/ADC/hal_adc.c: 284:     if(0X01U == _adc->voltage_reference){
[e $ ! == -> 1 `ui -> . *U __adc 5 `ui 328  ]
{
"285
[; ;MCAL/ADC/hal_adc.c: 285:         do{ADCON1bits.VCFG1 = 1; ADCON1bits.VCFG0 = 1; }while(0);
[e :U 331 ]
{
[e = . . _ADCON1bits 1 5 -> -> 1 `i `uc ]
[e = . . _ADCON1bits 1 4 -> -> 1 `i `uc ]
}
[e :U 330 ]
"286
[; ;MCAL/ADC/hal_adc.c: 286:     }
}
[e $U 332  ]
"287
[; ;MCAL/ADC/hal_adc.c: 287:     else if(0X00U == _adc->voltage_reference){
[e :U 328 ]
[e $ ! == -> 0 `ui -> . *U __adc 5 `ui 333  ]
{
"288
[; ;MCAL/ADC/hal_adc.c: 288:         do{ADCON1bits.VCFG1 = 0; ADCON1bits.VCFG0 = 0; }while(0);
[e :U 336 ]
{
[e = . . _ADCON1bits 1 5 -> -> 0 `i `uc ]
[e = . . _ADCON1bits 1 4 -> -> 0 `i `uc ]
}
[e :U 335 ]
"289
[; ;MCAL/ADC/hal_adc.c: 289:     }
}
[e $U 337  ]
"290
[; ;MCAL/ADC/hal_adc.c: 290:     else{
[e :U 333 ]
{
"291
[; ;MCAL/ADC/hal_adc.c: 291:         do{ADCON1bits.VCFG1 = 0; ADCON1bits.VCFG0 = 0; }while(0);
[e :U 340 ]
{
[e = . . _ADCON1bits 1 5 -> -> 0 `i `uc ]
[e = . . _ADCON1bits 1 4 -> -> 0 `i `uc ]
}
[e :U 339 ]
"292
[; ;MCAL/ADC/hal_adc.c: 292:     }
}
[e :U 337 ]
[e :U 332 ]
"293
[; ;MCAL/ADC/hal_adc.c: 293: }
[e :UE 327 ]
}
"295
[; ;MCAL/ADC/hal_adc.c: 295: void ADC_ISR(void){
[v _ADC_ISR `(v ~T0 @X0 1 ef ]
{
[e :U _ADC_ISR ]
[f ]
"296
[; ;MCAL/ADC/hal_adc.c: 296:     (PIR1bits.ADIF = 0);
[e = . . _PIR1bits 0 6 -> -> 0 `i `uc ]
"297
[; ;MCAL/ADC/hal_adc.c: 297:     if(ADC_InterruptHandler){
[e $ ! != _ADC_InterruptHandler -> -> 0 `i `*F3154 342  ]
{
"298
[; ;MCAL/ADC/hal_adc.c: 298:         ADC_InterruptHandler();
[e ( *U _ADC_InterruptHandler ..  ]
"300
[; ;MCAL/ADC/hal_adc.c: 300:     }
}
[e :U 342 ]
"301
[; ;MCAL/ADC/hal_adc.c: 301: }
[e :UE 341 ]
}
